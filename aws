#!/bin/bash

SERVICES=("aws-sensor.service" "aws-web.service" "aws-api.service" "aws-backup.service")
LOG_DIR="/opt/aws/app/logs"
APP_BASE="/opt/aws"

function check_exists() {
    for service in "${SERVICES[@]}"; do
        if [ -f "/etc/systemd/system/$service" ]; then
            echo "‚úî $service ditemukan"
        else
            echo "‚úñ $service TIDAK ditemukan"
        fi
    done
}

function start_services() {
    for service in "${SERVICES[@]}"; do
        sudo systemctl start "$service"
        echo "‚ñ∂Ô∏è $service dijalankan"
    done
}

function stop_services() {
    for service in "${SERVICES[@]}"; do
        sudo systemctl stop "$service"
        echo "‚èπÔ∏è $service dihentikan"
    done
}

function start_service_by_name() {
    local name="$1"
    local service_name="aws-${name}.service"
    if [[ " ${SERVICES[*]} " == *"$service_name"* ]]; then
        sudo systemctl start "$service_name"
        echo "‚ñ∂Ô∏è $service_name dijalankan"
    else
        echo "‚ùå Service '$name' tidak dikenal"
    fi
}

function stop_service_by_name() {
    local name="$1"
    local service_name="aws-${name}.service"
    if [[ " ${SERVICES[*]} " == *"$service_name"* ]]; then
        sudo systemctl stop "$service_name"
        echo "‚èπÔ∏è $service_name dihentikan"
    else
        echo "‚ùå Service '$name' tidak dikenal"
    fi
}

function reset_services() {
    echo "üîÅ Reset semua service..."
    stop_services
    start_services
}

function status_services() {
    for service in "${SERVICES[@]}"; do
        echo "üìã Status $service:"
        sudo systemctl status "$service" --no-pager
        echo ""
    done
}

function uninstall_services(){
    echo "üö® Memulai proses uninstall AWS (Automatic Weather Station)..."

    INSTALL_DIR="/opt/aws"
    LOG_DIR="$INSTALL_DIR/logs"
    BIN_PATH="/usr/bin/aws"
    DB_DIR="$INSTALL_DIR/database"

    # Tanya apakah ingin menghapus database
    read -p "‚ùì Apakah Anda ingin menghapus database ? [y/N]: " DELETE_DB
    DELETE_DB=${DELETE_DB,,}

    echo "üõë Menghentikan dan menonaktifkan service..."
    for service in "${SERVICES[@]}"; do
        if systemctl is-active --quiet "$service"; then
            sudo systemctl stop "$service"
            echo "‚úÖ $service dihentikan"
        fi
        if systemctl is-enabled --quiet "$service"; then
            sudo systemctl disable "$service"
            echo "‚úÖ $service dinonaktifkan"
        fi
        sudo rm -f "/etc/systemd/system/$service"
        echo "üóëÔ∏è $service dihapus"
    done

    echo "üîÑ Reload systemd daemon..."
    sudo systemctl daemon-reload
    sudo systemctl reset-failed

    if [[ "$DELETE_DB" == "y" || "$DELETE_DB" == "yes" ]]; then
        echo "üóëÔ∏è Menghapus seluruh direktori $INSTALL_DIR termasuk database..."
        sudo rm -rf "$INSTALL_DIR"
    else
        echo "‚ö†Ô∏è Menyisakan database. Menghapus semua kecuali folder $DB_DIR..."
        sudo find "$INSTALL_DIR" -mindepth 1 -not -path "$DB_DIR" -not -path "$DB_DIR/*" -exec rm -rf {} +
        echo "‚úÖ Folder database tetap disimpan di $DB_DIR"
    fi

    if [[ -f "$BIN_PATH" ]]; then
        echo "üóëÔ∏è Menghapus CLI aws dari $BIN_PATH..."
        sudo rm -f "$BIN_PATH"
    else
        echo "‚ö†Ô∏è CLI aws tidak ditemukan di $BIN_PATH, dilewati."
    fi

    echo "‚úÖ Uninstall selesai. Sistem telah dibersihkan."
}

function help_menu() {
    echo "Penggunaan: aws [perintah] [opsi]"
    echo ""
    echo "Perintah yang tersedia:"
    echo "  uninstall         ‚Üí Hapus AWS"
    echo "  start             ‚Üí Menjalankan semua service"
    echo "  stop              ‚Üí Menghentikan semua service"
    echo "  start [nama]      ‚Üí Jalankan service spesifik (contoh: aws start backup)"
    echo "  stop [nama]       ‚Üí Hentikan service spesifik (contoh: aws stop api)"
    echo "  reset             ‚Üí Reset semua service (stop lalu start)"
    echo "  status            ‚Üí Tampilkan status semua service"
    echo "  check             ‚Üí Cek apakah file service sudah ada"
    echo "  help              ‚Üí Tampilkan menu bantuan"
}

# === Entry Point ===
case "$1" in
    uninstall) uninstall_services ;;
    start)
        if [ -n "$2" ]; then
            start_service_by_name "$2"
        else
            start_services
        fi
        ;;
    stop)
        if [ -n "$2" ]; then
            stop_service_by_name "$2"
        else
            stop_services
        fi
        ;;
    reset) reset_services ;;
    status) status_services ;;
    check) check_exists ;;
    help | *) help_menu ;;
esac
